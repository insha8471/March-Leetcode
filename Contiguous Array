Approach : prefix Sum + HashMap
Time complexity : O(n)
Space complexity : O(n)

lass Solution {
    public int findMaxLength(int[] nums) {
        int n = nums.length;
        int maxL = 0;
        int prefSum = 0;

        // <prefSum, index>
        Map<Integer, Integer> mp = new HashMap<>();
        mp.put(0,-1);

        for(int i=0;i<n;i++){
            prefSum += nums[i] == 0 ? -1 : 1;
            if(mp.containsKey(prefSum)){
                maxL = Math.max(maxL, i-mp.get(prefSum));
            }else{
                mp.put(prefSum, i);
            }
        }
        return maxL;
    }
}
